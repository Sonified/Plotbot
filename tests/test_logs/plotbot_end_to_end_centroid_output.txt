[TEST LOG] 2025-05-04 04:58:10
[TEST LOG] test_plotbot_end_to_end_mag_and_epad
[TEST] Calling pb.plotbot with mag_rtn_4sa.br and epad.strahl...
[35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'], variables=(plot_manager(None, dtype=object), plot_manager([[ 7.8337097,  8.090337 ,  8.134984 , ...,  9.607815 ,
                9.913903 , 10.288674 ],
              [ 8.13474  ,  7.9505005,  8.0788965, ...,  9.599296 ,
               10.000704 , 10.133798 ],
              [ 8.164703 ,  7.9994955,  8.064953 , ...,  9.607314 ,
                9.995401 , 10.255518 ],
              ...,
              [10.096705 , 10.223774 ,  9.759833 , ...,  7.8317194,
                7.9520674,  7.7618246],
              [10.063436 , 10.226681 ,  9.829195 , ...,  7.732028 ,
                7.783005 ,  7.9521503],
              [10.194852 , 10.196744 ,  9.750188 , ...,  7.8927627,
                7.8942585,  7.7667627]], dtype=float32))[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'mag_RTN_4sa', 'spe_sf0_pad'}[0m
[35m[ZARR] 
Processing Data Type: mag_RTN_4sa...[0m
[35m[ZARR] [get_data] mag_RTN_4sa: needs_import=True, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for mag_RTN_4sa[0m
[35m[ZARR] [load_data] Called for data_type=mag_RTN_4sa, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=mag_RTN_4sa, start_time=2022-04-14 00:00:00+00:00, end_time=2022-04-14 06:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN_4sa, timestamp=2022-04-14 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/mag_rtn_4sa/2022/04/14.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/mag_rtn_4sa/2022/04/14.zarr'][0m
[35m[ZARR] [load_data] Loading 1 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[LOAD] Loaded dataset variables: ['pmag', 'bn', 'bt', 'br', 'bmag']
[LOAD] Loaded dataset coordinates: ['time']
[LOAD] Loaded time: ['2022-04-14T00:00:00.114809984' '2022-04-14T00:00:00.333263360'
 '2022-04-14T00:00:00.551716608' '2022-04-14T00:00:00.770169984'
 '2022-04-14T00:00:00.988623488'] ... total: 95305
[LOAD] LoadedData.raw_data keys: ['pmag', 'bn', 'bt', 'br', 'bmag', 'psp_fld_l2_mag_RTN_4_Sa_per_Cyc']
[LOAD] LoadedData.datetime_array: ['2022-04-14T00:00:00.114809984' '2022-04-14T00:00:00.333263360'
 '2022-04-14T00:00:00.551716608' '2022-04-14T00:00:00.770169984'
 '2022-04-14T00:00:00.988623488'] ... total: 95305
[LOAD] All coordinates after loading:
  - time: shape=(95305,), first 5 values=['2022-04-14T00:00:00.114809984' '2022-04-14T00:00:00.333263360'
 '2022-04-14T00:00:00.551716608' '2022-04-14T00:00:00.770169984'
 '2022-04-14T00:00:00.988623488']
[35m[ZARR] [get_data] Calling update on mag_rtn_4sa with data_obj for mag_RTN_4sa[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=br[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bt[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bn[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=pmag[0m
[35m[ZARR] [get_data] Update completed for mag_rtn_4sa[0m
[35m[ZARR] [get_data] Calling store_data for mag_RTN_4sa[0m
[35m[ZARR] [store_data] Called for data_type=mag_RTN_4sa, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] Storing data for mag_RTN_4sa[0m
[35m[ZARR] datetime_array length: 95305[0m
[35m[ZARR] raw_data keys: ['all', 'br', 'bt', 'bn', 'bmag', 'pmag'][0m
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
[STORE] class_instance.pitch_angle: type=<class 'NoneType'>, shape=None, value=None
[STORE] raw_data[all]: type=<class 'list'>, shape=None
[STORE] raw_data[br]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bt]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bn]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bmag]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[pmag]: type=<class 'numpy.ndarray'>, shape=(95305,)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-04-14T00:00:00.114000000' '2022-04-14T00:00:00.333000000'
 '2022-04-14T00:00:00.551000000' '2022-04-14T00:00:00.770000000'
 '2022-04-14T00:00:00.988000000'] ... total: 95305
[STORE] Dataset variables: ['br', 'bt', 'bn', 'bmag', 'pmag']
[STORE] Dataset coordinates: ['time']
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN_4sa, timestamp=2022-04-14T00:00:00.114000000, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['time', 'pmag', 'zarr.json', 'bt', 'bn', 'br', 'bmag'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for mag_RTN_4sa: Success[0m
[35m[ZARR] Server mode for mag_RTN_4sa: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for mag_RTN_4sa...[0m
[35m[ZARR] SPDF download result (dynamic mode) for mag_RTN_4sa: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for mag_RTN_4sa[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] Updating tracker for mag_RTN_4sa[0m
[35m[ZARR] [get_data] Calling update on mag_rtn_4sa with data_obj for mag_RTN_4sa[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=br[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bt[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bn[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=pmag[0m
[35m[ZARR] [get_data] Update completed for mag_rtn_4sa[0m
[35m[ZARR] [get_data] Calling store_data for mag_RTN_4sa[0m
[35m[ZARR] [store_data] Called for data_type=mag_RTN_4sa, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] Storing data for mag_RTN_4sa[0m
[35m[ZARR] datetime_array length: 95305[0m
[35m[ZARR] raw_data keys: ['all', 'br', 'bt', 'bn', 'bmag', 'pmag'][0m
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
[STORE] class_instance.pitch_angle: type=<class 'NoneType'>, shape=None, value=None
[STORE] raw_data[all]: type=<class 'list'>, shape=None
[STORE] raw_data[br]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bt]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bn]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bmag]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[pmag]: type=<class 'numpy.ndarray'>, shape=(95305,)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-04-14T00:00:00.114809984' '2022-04-14T00:00:00.333263360'
 '2022-04-14T00:00:00.551716608' '2022-04-14T00:00:00.770169984'
 '2022-04-14T00:00:00.988623488'] ... total: 95305
[STORE] Dataset variables: ['br', 'bt', 'bn', 'bmag', 'pmag']
[STORE] Dataset coordinates: ['time']
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN_4sa, timestamp=2022-04-14T00:00:00.114809984, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['time', 'pmag', 'zarr.json', 'bt', 'bn', 'br', 'bmag'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for mag_RTN_4sa: Success[0m
[35m[ZARR] 
Processing Data Type: spe_sf0_pad...[0m
[35m[ZARR] [get_data] spe_sf0_pad: needs_import=True, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for spe_sf0_pad[0m
[35m[ZARR] [load_data] Called for data_type=spe_sf0_pad, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=spe_sf0_pad, start_time=2022-04-14 00:00:00+00:00, end_time=2022-04-14 06:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-04-14 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/spe_sf0_pad/2022/04/14.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/spe_sf0_pad/2022/04/14.zarr'][0m
[35m[ZARR] [load_data] Loading 1 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[LOAD] Loaded dataset variables: ['strahl', 'centroids']
[LOAD] Loaded dataset coordinates: ['pitch_angle', 'time']
[LOAD] Loaded time: ['2022-04-14T00:03:44.139775488' '2022-04-14T00:18:38.925658496'
 '2022-04-14T00:33:33.711861888' '2022-04-14T00:48:28.498364928'
 '2022-04-14T01:03:23.285048320'] ... total: 22
[DEBUG][ZARR][LOAD] Loaded var 'strahl': type=<class 'numpy.ndarray'>, shape=(22, 12)
[DEBUG][ZARR][LOAD] Loaded var 'centroids': type=<class 'numpy.ndarray'>, shape=(22,)
[DEBUG][ZARR][LOAD] Loaded coord 'pitch_angle': type=<class 'numpy.ndarray'>, shape: (12,)
[LOAD] LoadedData.raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[LOAD] LoadedData.datetime_array: ['2022-04-14T00:03:44.139775488' '2022-04-14T00:18:38.925658496'
 '2022-04-14T00:33:33.711861888' '2022-04-14T00:48:28.498364928'
 '2022-04-14T01:03:23.285048320'] ... total: 22
[LOAD] All coordinates after loading:
  - pitch_angle: shape=(12,), first 5 values=[ 7.5 22.5 37.5 52.5 67.5]
  - time: shape=(22,), first 5 values=['2022-04-14T00:03:44.139775488' '2022-04-14T00:18:38.925658496'
 '2022-04-14T00:33:33.711861888' '2022-04-14T00:48:28.498364928'
 '2022-04-14T01:03:23.285048320']
[DEBUG][ZARR][LOAD] times_mesh shape: (22, 12), pitch_mesh shape: (22, 12), dtype: float64
[DEBUG][ZARR][LOAD] First 5 rows of times_mesh: [[   0.            0.            0.            0.            0.
     0.            0.            0.            0.            0.
     0.            0.        ]
 [ 894.78588301  894.78588301  894.78588301  894.78588301  894.78588301
   894.78588301  894.78588301  894.78588301  894.78588301  894.78588301
   894.78588301  894.78588301]
 [1789.5720864  1789.5720864  1789.5720864  1789.5720864  1789.5720864
  1789.5720864  1789.5720864  1789.5720864  1789.5720864  1789.5720864
  1789.5720864  1789.5720864 ]
 [2684.35858944 2684.35858944 2684.35858944 2684.35858944 2684.35858944
  2684.35858944 2684.35858944 2684.35858944 2684.35858944 2684.35858944
  2684.35858944 2684.35858944]
 [3579.14527283 3579.14527283 3579.14527283 3579.14527283 3579.14527283
  3579.14527283 3579.14527283 3579.14527283 3579.14527283 3579.14527283
  3579.14527283 3579.14527283]]
[DEBUG][ZARR][LOAD] First 5 rows of pitch_mesh: [[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['strahl', 'centroids', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE', 'pitch_mesh']
[DEBUG][EPAD] imported_data.data['pitch_angle'] type: <class 'numpy.ndarray'>, shape: (12,)
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (12,), value: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (22, 12)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] i=0, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=1, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=2, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=3, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=4, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] centroids shape: (22,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 22[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(22, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(22,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(22, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-04-14T00:03:44.139000000' '2022-04-14T00:18:38.925000000'
 '2022-04-14T00:33:33.711000000' '2022-04-14T00:48:28.498000000'
 '2022-04-14T01:03:23.285000000'] ... total: 22
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-04-14T00:03:44.139000000, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
[35m[ZARR] Server mode for spe_sf0_pad: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for spe_sf0_pad...[0m
[35m[ZARR] SPDF download result (dynamic mode) for spe_sf0_pad: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for spe_sf0_pad[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] Updating tracker for spe_sf0_pad[0m
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (22, 12), value: [[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (22, 12, 32)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(22, 12), value=[[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[DEBUG][EPAD] PITCHANGLE[0]: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] centroids shape: (22,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 22[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(22, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(22,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(22, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-04-14T00:03:44.139775488' '2022-04-14T00:18:38.925658496'
 '2022-04-14T00:33:33.711861888' '2022-04-14T00:48:28.498364928'
 '2022-04-14T01:03:23.285048320'] ... total: 22
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-04-14T00:03:44.139775488, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
[TEST] pb.plotbot call complete.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            PASSED
tests/test_zarr_basic.py::test_zarr_data_roundtrip_epad_strahl [35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'], variables=(plot_manager([[  6.2506638,   6.647168 ,   6.8502417,   6.713455 ,
                 6.7751064,   6.7197003,   6.8348794,   6.8191366,
                 6.8068724,   7.088711 ,   7.365723 ,   7.6682544],
              [  7.1074157,   7.0050573,   6.736165 ,   6.743176 ,
                 6.705135 ,   6.6602197,   6.663236 ,   6.5938444,
                 6.864613 ,   6.9664116,   7.5808153,   7.8904243],
              [  6.3818946,   6.4897194,   6.579109 ,   6.715382 ,
                 6.8655586,   6.7025404,   6.836635 ,   6.848486 ,
                 6.859789 ,   6.968066 ,   7.299045 ,   7.45915  ],
              [  7.2664237,   7.103541 ,   6.731481 ,   6.882035 ,
                 6.7606344,   6.6640525,   6.8186336,   6.6510963,
                 6.8922935,   7.1165285,   7.407192 ,   7.535173 ],
              [-10.       ,   6.682136 ,   6.7369294,   6.805544 ,
                 6.812866 ,   6.519771 ,   6.6049585,   6.672868 ,
                 6.8785143,   7.252111 ,   7.429178 ,   7.5279956],
              [  6.5090356,   6.934379 ,   6.932974 ,   6.831121 ,
                 6.7195206,   6.476103 ,   6.4901576,   6.6436224,
                 6.8838186,   7.189644 ,   7.466158 ,   7.613333 ],
              [  7.260124 ,   7.002891 ,   6.9713902,   6.940235 ,
                 6.681293 ,   6.4289865,   6.559705 ,   6.583341 ,
                 6.743691 ,   7.121392 ,   7.43898  ,   7.629281 ],
              [  6.9559255,   7.284355 ,   6.9476085,   6.7843246,
                 6.565415 ,   6.66456  ,   6.6786704,   6.789415 ,
                 6.914851 ,   7.1951084,   7.383118 ,   7.7159495],
              [  6.734077 ,   7.0099   ,   7.1520123,   6.8327117,
                 6.6666636,   6.5884514,   6.6352115,   6.6626925,
                 6.798766 ,   7.1432037,   7.5144   ,   7.5260963],
              [  6.8590155,   6.857447 ,   6.97524  ,   6.797753 ,
                 6.567641 ,   6.4224205,   6.4196978,   6.55234  ,
                 6.767864 ,   6.916298 ,   7.383316 ,   7.695239 ],
              [  6.8557916,   6.998714 ,   7.0013185,   6.964421 ,
                 6.6723976,   6.423353 ,   6.41782  ,   6.62027  ,
                 6.7567573,   7.1021   ,   7.489764 ,   7.529068 ],
              [  6.5721016,   6.913411 ,   6.9466486,   6.762971 ,
                 6.635254 ,   6.3551126,   6.4372087,   6.6786914,
                 6.8395934,   6.8706226,   7.42778  ,   7.6680174],
              [  6.6221147,   6.8523564,   6.7532697,   6.7432857,
                 6.5771747,   6.3533673,   6.4237227,   6.455377 ,
                 6.745395 ,   6.8756566,   7.247263 ,   7.607061 ],
              [  7.253163 ,   6.942776 ,   6.9474916,   6.75895  ,
                 6.602011 ,   6.3872604,   6.3774295,   6.5085363,
                 6.681945 ,   6.9696956,   7.5744777,   7.6220965],
              [  7.157346 ,   6.6202736,   6.769719 ,   6.9324374,
                 6.6393957,   6.6147056,   6.3617787,   6.443213 ,
                 6.625378 ,   7.0102725,   7.4703493,   7.7587543],
              [  7.087239 ,   7.011447 ,   6.864527 ,   6.851873 ,
                 6.6557326,   6.5764728,   6.3958397,   6.4636636,
                 6.527623 ,   6.898851 ,   7.3942485,   7.8425183],
              [  6.8773026,   6.695374 ,   6.7564507,   6.794629 ,
                 6.514312 ,   6.7027535,   6.721038 ,   6.5545306,
                 6.6618843,   7.024073 ,   7.403549 ,   7.8283143],
              [  7.0224915,   7.0170703,   6.7496595,   6.6565304,
                 6.552818 ,   6.538964 ,   6.3783073,   6.4449525,
                 6.6271553,   7.099547 ,   7.5719485,   7.7528095],
              [  6.7273207,   6.80034  ,   6.6183696,   6.5871644,
                 6.6490984,   6.4831204,   6.6000013,   6.551341 ,
                 6.633281 ,   7.0013137,   7.397702 ,   7.6010704],
              [  7.427324 ,   7.193308 ,   6.9935255,   6.924308 ,
                 6.668056 ,   6.597592 ,   6.6360292,   6.486491 ,
                 6.735417 ,   6.950697 ,   7.412186 ,   7.7204466],
              [  7.1081953,   7.124685 ,   6.9535723,   6.8441696,
                 6.522302 ,   6.632376 ,   6.5249543,   6.6454787,
                 6.6394176,   6.859958 ,   7.356239 ,   7.715105 ],
              [  6.83216  ,   6.7954555,   6.878924 ,   6.9440064,
                 6.838827 ,   6.6788936,   6.609939 ,   6.603327 ,
                 6.765224 ,   7.002208 ,   7.436782 ,   7.569813 ]],
             dtype=float32),)[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'spe_sf0_pad'}[0m
[35m[ZARR] 
Processing Data Type: spe_sf0_pad...[0m
[35m[ZARR] [get_data] spe_sf0_pad: needs_import=False, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for spe_sf0_pad[0m
[35m[ZARR] [load_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=spe_sf0_pad, start_time=2021-04-26 00:00:00+00:00, end_time=2021-04-26 06:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/spe_sf0_pad/2021/04/26.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/spe_sf0_pad/2021/04/26.zarr'][0m
[35m[ZARR] [load_data] Loading 1 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[35m[ZARR] Zarr data not available for spe_sf0_pad, proceeding with normal download...[0m
[35m[ZARR] Server mode for spe_sf0_pad: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for spe_sf0_pad...[0m
[35m[ZARR] SPDF download result (dynamic mode) for spe_sf0_pad: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for spe_sf0_pad[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (1545, 12), value: [[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (1545, 12, 32)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(1545, 12), value=[[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] PITCHANGLE[0]: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] centroids shape: (1545,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 1545[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(1545,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672'] ... total: 1545
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26T00:00:12.037167616, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
[35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'], variables=(plot_manager([[7.4801116, 7.536283 , 7.1500998, ..., 7.6354613,
               8.394874 , 9.208845 ],
              [7.9773226, 7.0820904, 7.297477 , ..., 7.7481866,
               8.493429 , 9.3180065],
              [7.696288 , 7.5306835, 7.1252513, ..., 7.8163824,
               8.382151 , 9.173062 ],
              ...,
              [7.790043 , 7.695957 , 7.3423295, ..., 8.8081   ,
               9.330984 , 9.519697 ],
              [7.900345 , 7.5775867, 7.5894103, ..., 8.767038 ,
               9.225389 , 9.599582 ],
              [7.7125993, 7.474445 , 7.4550858, ..., 8.745195 ,
               9.235021 , 9.458765 ]], dtype=float32),)[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'spe_sf0_pad'}[0m
[35m[ZARR] 
Processing Data Type: spe_sf0_pad...[0m
[35m[ZARR] [get_data] spe_sf0_pad: needs_import=False, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for spe_sf0_pad[0m
[35m[ZARR] [load_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=spe_sf0_pad, start_time=2021-04-26 00:00:00+00:00, end_time=2021-04-26 06:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/spe_sf0_pad/2021/04/26.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/spe_sf0_pad/2021/04/26.zarr'][0m
[35m[ZARR] [load_data] Loading 1 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[LOAD] Loaded dataset variables: ['centroids', 'pitch_mesh', 'strahl']
[LOAD] Loaded dataset coordinates: ['pitch_angle', 'time']
[LOAD] Loaded time: ['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672'] ... total: 1545
[DEBUG][ZARR][LOAD] Loaded var 'centroids': type=<class 'numpy.ndarray'>, shape=(1545,)
[DEBUG][ZARR][LOAD] Loaded var 'pitch_mesh': type=<class 'numpy.ndarray'>, shape=(1545, 12)
[DEBUG][ZARR][LOAD] Loaded var 'strahl': type=<class 'numpy.ndarray'>, shape=(1545, 12)
[DEBUG][ZARR][LOAD] Loaded coord 'pitch_angle': type=<class 'numpy.ndarray'>, shape: (12,)
[LOAD] LoadedData.raw_data keys: ['centroids', 'pitch_mesh', 'strahl', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[LOAD] LoadedData.datetime_array: ['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672'] ... total: 1545
[LOAD] All coordinates after loading:
  - pitch_angle: shape=(12,), first 5 values=[ 7.5 22.5 37.5 52.5 67.5]
  - time: shape=(1545,), first 5 values=['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672']
[DEBUG][ZARR][LOAD] times_mesh shape: (1545, 12), pitch_mesh shape: (1545, 12), dtype: float64
[DEBUG][ZARR][LOAD] First 5 rows of times_mesh: [[ 0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.        ]
 [13.98108211 13.98108211 13.98108211 13.98108211 13.98108211 13.98108211
  13.98108211 13.98108211 13.98108211 13.98108211 13.98108211 13.98108211]
 [27.96208422 27.96208422 27.96208422 27.96208422 27.96208422 27.96208422
  27.96208422 27.96208422 27.96208422 27.96208422 27.96208422 27.96208422]
 [41.94316672 41.94316672 41.94316672 41.94316672 41.94316672 41.94316672
  41.94316672 41.94316672 41.94316672 41.94316672 41.94316672 41.94316672]
 [55.92418906 55.92418906 55.92418906 55.92418906 55.92418906 55.92418906
  55.92418906 55.92418906 55.92418906 55.92418906 55.92418906 55.92418906]]
[DEBUG][ZARR][LOAD] First 5 rows of pitch_mesh: [[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['centroids', 'pitch_mesh', 'strahl', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['pitch_angle'] type: <class 'numpy.ndarray'>, shape: (12,)
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (12,), value: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (1545, 12)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] i=0, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=1, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=2, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=3, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=4, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] centroids shape: (1545,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 1545[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(1545,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2021-04-26T00:00:12.037000000' '2021-04-26T00:00:26.018000000'
 '2021-04-26T00:00:39.999000000' '2021-04-26T00:00:53.980000000'
 '2021-04-26T00:01:07.961000000'] ... total: 1545
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26T00:00:12.037000000, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
[35m[ZARR] Server mode for spe_sf0_pad: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for spe_sf0_pad...[0m
[35m[ZARR] SPDF download result (dynamic mode) for spe_sf0_pad: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for spe_sf0_pad[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (1545, 12), value: [[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (1545, 12, 32)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(1545, 12), value=[[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] PITCHANGLE[0]: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] centroids shape: (1545,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 1545[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(1545,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672'] ... total: 1545
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26T00:00:12.037167616, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
✅ Zarr roundtrip test passed: data and axis arrays are identical.
PASSED
tests/test_zarr_basic.py::test_zarr_single_file_storage_and_load_epad_strahl Deleted Zarr file: data_cubby/spe_sf0_pad/2021/04/26.zarr
[35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'], variables=(plot_manager([[7.4801116, 7.536283 , 7.1500998, ..., 7.6354613,
               8.394874 , 9.208845 ],
              [7.9773226, 7.0820904, 7.297477 , ..., 7.7481866,
               8.493429 , 9.3180065],
              [7.696288 , 7.5306835, 7.1252513, ..., 7.8163824,
               8.382151 , 9.173062 ],
              ...,
              [7.790043 , 7.695957 , 7.3423295, ..., 8.8081   ,
               9.330984 , 9.519697 ],
              [7.900345 , 7.5775867, 7.5894103, ..., 8.767038 ,
               9.225389 , 9.599582 ],
              [7.7125993, 7.474445 , 7.4550858, ..., 8.745195 ,
               9.235021 , 9.458765 ]], dtype=float32),)[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'spe_sf0_pad'}[0m
[35m[ZARR] 
Processing Data Type: spe_sf0_pad...[0m
[35m[ZARR] [get_data] spe_sf0_pad: needs_import=False, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for spe_sf0_pad[0m
[35m[ZARR] [load_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=spe_sf0_pad, start_time=2021-04-26 00:00:00+00:00, end_time=2021-04-26 06:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/spe_sf0_pad/2021/04/26.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/spe_sf0_pad/2021/04/26.zarr'][0m
[35m[ZARR] [load_data] Loading 1 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[35m[ZARR] Zarr data not available for spe_sf0_pad, proceeding with normal download...[0m
[35m[ZARR] Server mode for spe_sf0_pad: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for spe_sf0_pad...[0m
[35m[ZARR] SPDF download result (dynamic mode) for spe_sf0_pad: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for spe_sf0_pad[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (1545, 12), value: [[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (1545, 12, 32)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(1545, 12), value=[[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] PITCHANGLE[0]: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] centroids shape: (1545,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 1545[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(1545,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672'] ... total: 1545
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26T00:00:12.037167616, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
[35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'], variables=(plot_manager([[7.4801116, 7.536283 , 7.1500998, ..., 7.6354613,
               8.394874 , 9.208845 ],
              [7.9773226, 7.0820904, 7.297477 , ..., 7.7481866,
               8.493429 , 9.3180065],
              [7.696288 , 7.5306835, 7.1252513, ..., 7.8163824,
               8.382151 , 9.173062 ],
              ...,
              [7.790043 , 7.695957 , 7.3423295, ..., 8.8081   ,
               9.330984 , 9.519697 ],
              [7.900345 , 7.5775867, 7.5894103, ..., 8.767038 ,
               9.225389 , 9.599582 ],
              [7.7125993, 7.474445 , 7.4550858, ..., 8.745195 ,
               9.235021 , 9.458765 ]], dtype=float32),)[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'spe_sf0_pad'}[0m
[35m[ZARR] 
Processing Data Type: spe_sf0_pad...[0m
[35m[ZARR] [get_data] spe_sf0_pad: needs_import=False, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for spe_sf0_pad[0m
[35m[ZARR] [load_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=spe_sf0_pad, start_time=2021-04-26 00:00:00+00:00, end_time=2021-04-26 06:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/spe_sf0_pad/2021/04/26.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/spe_sf0_pad/2021/04/26.zarr'][0m
[35m[ZARR] [load_data] Loading 1 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[LOAD] Loaded dataset variables: ['strahl', 'pitch_mesh', 'centroids']
[LOAD] Loaded dataset coordinates: ['pitch_angle', 'time']
[LOAD] Loaded time: ['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672'] ... total: 1545
[DEBUG][ZARR][LOAD] Loaded var 'strahl': type=<class 'numpy.ndarray'>, shape=(1545, 12)
[DEBUG][ZARR][LOAD] Loaded var 'pitch_mesh': type=<class 'numpy.ndarray'>, shape=(1545, 12)
[DEBUG][ZARR][LOAD] Loaded var 'centroids': type=<class 'numpy.ndarray'>, shape=(1545,)
[DEBUG][ZARR][LOAD] Loaded coord 'pitch_angle': type=<class 'numpy.ndarray'>, shape: (12,)
[LOAD] LoadedData.raw_data keys: ['strahl', 'pitch_mesh', 'centroids', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[LOAD] LoadedData.datetime_array: ['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672'] ... total: 1545
[LOAD] All coordinates after loading:
  - pitch_angle: shape=(12,), first 5 values=[ 7.5 22.5 37.5 52.5 67.5]
  - time: shape=(1545,), first 5 values=['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672']
[DEBUG][ZARR][LOAD] times_mesh shape: (1545, 12), pitch_mesh shape: (1545, 12), dtype: float64
[DEBUG][ZARR][LOAD] First 5 rows of times_mesh: [[ 0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.        ]
 [13.98108211 13.98108211 13.98108211 13.98108211 13.98108211 13.98108211
  13.98108211 13.98108211 13.98108211 13.98108211 13.98108211 13.98108211]
 [27.96208422 27.96208422 27.96208422 27.96208422 27.96208422 27.96208422
  27.96208422 27.96208422 27.96208422 27.96208422 27.96208422 27.96208422]
 [41.94316672 41.94316672 41.94316672 41.94316672 41.94316672 41.94316672
  41.94316672 41.94316672 41.94316672 41.94316672 41.94316672 41.94316672]
 [55.92418906 55.92418906 55.92418906 55.92418906 55.92418906 55.92418906
  55.92418906 55.92418906 55.92418906 55.92418906 55.92418906 55.92418906]]
[DEBUG][ZARR][LOAD] First 5 rows of pitch_mesh: [[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['strahl', 'pitch_mesh', 'centroids', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['pitch_angle'] type: <class 'numpy.ndarray'>, shape: (12,)
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (12,), value: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (1545, 12)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] i=0, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=1, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=2, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=3, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=4, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] centroids shape: (1545,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 1545[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(1545,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2021-04-26T00:00:12.037000000' '2021-04-26T00:00:26.018000000'
 '2021-04-26T00:00:39.999000000' '2021-04-26T00:00:53.980000000'
 '2021-04-26T00:01:07.961000000'] ... total: 1545
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26T00:00:12.037000000, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
[35m[ZARR] Server mode for spe_sf0_pad: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for spe_sf0_pad...[0m
[35m[ZARR] SPDF download result (dynamic mode) for spe_sf0_pad: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for spe_sf0_pad[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (1545, 12), value: [[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (1545, 12, 32)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(1545, 12), value=[[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] PITCHANGLE[0]: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] centroids shape: (1545,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2021/04/26 00:00:00.000', '2021/04/26 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 1545[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(1545,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(1545, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2021-04-26T00:00:12.037167616' '2021-04-26T00:00:26.018249728'
 '2021-04-26T00:00:39.999251840' '2021-04-26T00:00:53.980334336'
 '2021-04-26T00:01:07.961356672'] ... total: 1545
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2021-04-26T00:00:12.037167616, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
Data shape: (1545, 12), Axis shape: (12,)
✅ Zarr single file storage/load test passed.
PASSED
tests/test_zarr_basic.py::test_plotbot_epad_and_mag_rtn_4sa_keyerror_check [35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'], variables=(plot_manager([1.431513 , 1.3332353, 1.4244695, ...,       nan,       nan,
                    nan], dtype=float32), plot_manager([[7.4801116, 7.536283 , 7.1500998, ..., 7.6354613,
               8.394874 , 9.208845 ],
              [7.9773226, 7.0820904, 7.297477 , ..., 7.7481866,
               8.493429 , 9.3180065],
              [7.696288 , 7.5306835, 7.1252513, ..., 7.8163824,
               8.382151 , 9.173062 ],
              ...,
              [7.790043 , 7.695957 , 7.3423295, ..., 8.8081   ,
               9.330984 , 9.519697 ],
              [7.900345 , 7.5775867, 7.5894103, ..., 8.767038 ,
               9.225389 , 9.599582 ],
              [7.7125993, 7.474445 , 7.4550858, ..., 8.745195 ,
               9.235021 , 9.458765 ]], dtype=float32))[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'mag_RTN_4sa', 'spe_sf0_pad'}[0m
[35m[ZARR] 
Processing Data Type: mag_RTN_4sa...[0m
[35m[ZARR] [get_data] mag_RTN_4sa: needs_import=False, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for mag_RTN_4sa[0m
[35m[ZARR] [load_data] Called for data_type=mag_RTN_4sa, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=mag_RTN_4sa, start_time=2022-04-14 00:00:00+00:00, end_time=2022-04-14 06:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN_4sa, timestamp=2022-04-14 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/mag_rtn_4sa/2022/04/14.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/mag_rtn_4sa/2022/04/14.zarr'][0m
[35m[ZARR] [load_data] Loading 1 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[LOAD] Loaded dataset variables: ['bt', 'pmag', 'bmag', 'br', 'bn']
[LOAD] Loaded dataset coordinates: ['time']
[LOAD] Loaded time: ['2022-04-14T00:00:00.114809984' '2022-04-14T00:00:00.333263360'
 '2022-04-14T00:00:00.551716608' '2022-04-14T00:00:00.770169984'
 '2022-04-14T00:00:00.988623488'] ... total: 95305
[LOAD] LoadedData.raw_data keys: ['bt', 'pmag', 'bmag', 'br', 'bn', 'psp_fld_l2_mag_RTN_4_Sa_per_Cyc']
[LOAD] LoadedData.datetime_array: ['2022-04-14T00:00:00.114809984' '2022-04-14T00:00:00.333263360'
 '2022-04-14T00:00:00.551716608' '2022-04-14T00:00:00.770169984'
 '2022-04-14T00:00:00.988623488'] ... total: 95305
[LOAD] All coordinates after loading:
  - time: shape=(95305,), first 5 values=['2022-04-14T00:00:00.114809984' '2022-04-14T00:00:00.333263360'
 '2022-04-14T00:00:00.551716608' '2022-04-14T00:00:00.770169984'
 '2022-04-14T00:00:00.988623488']
[35m[ZARR] [get_data] Calling update on mag_rtn_4sa with data_obj for mag_RTN_4sa[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=br[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bt[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bn[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=pmag[0m
[35m[ZARR] [get_data] Update completed for mag_rtn_4sa[0m
[35m[ZARR] [get_data] Calling store_data for mag_RTN_4sa[0m
[35m[ZARR] [store_data] Called for data_type=mag_RTN_4sa, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] Storing data for mag_RTN_4sa[0m
[35m[ZARR] datetime_array length: 95305[0m
[35m[ZARR] raw_data keys: ['all', 'br', 'bt', 'bn', 'bmag', 'pmag'][0m
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
[STORE] class_instance.pitch_angle: type=<class 'NoneType'>, shape=None, value=None
[STORE] raw_data[all]: type=<class 'list'>, shape=None
[STORE] raw_data[br]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bt]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bn]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bmag]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[pmag]: type=<class 'numpy.ndarray'>, shape=(95305,)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-04-14T00:00:00.114000000' '2022-04-14T00:00:00.333000000'
 '2022-04-14T00:00:00.551000000' '2022-04-14T00:00:00.770000000'
 '2022-04-14T00:00:00.988000000'] ... total: 95305
[STORE] Dataset variables: ['br', 'bt', 'bn', 'bmag', 'pmag']
[STORE] Dataset coordinates: ['time']
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN_4sa, timestamp=2022-04-14T00:00:00.114000000, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['time', 'pmag', 'zarr.json', 'bt', 'bn', 'br', 'bmag'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for mag_RTN_4sa: Success[0m
[35m[ZARR] Server mode for mag_RTN_4sa: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for mag_RTN_4sa...[0m
[35m[ZARR] SPDF download result (dynamic mode) for mag_RTN_4sa: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for mag_RTN_4sa[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] [get_data] Calling update on mag_rtn_4sa with data_obj for mag_RTN_4sa[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=br[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bt[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bn[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=pmag[0m
[35m[ZARR] [get_data] Update completed for mag_rtn_4sa[0m
[35m[ZARR] [get_data] Calling store_data for mag_RTN_4sa[0m
[35m[ZARR] [store_data] Called for data_type=mag_RTN_4sa, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] Storing data for mag_RTN_4sa[0m
[35m[ZARR] datetime_array length: 95305[0m
[35m[ZARR] raw_data keys: ['all', 'br', 'bt', 'bn', 'bmag', 'pmag'][0m
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
[STORE] class_instance.pitch_angle: type=<class 'NoneType'>, shape=None, value=None
[STORE] raw_data[all]: type=<class 'list'>, shape=None
[STORE] raw_data[br]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bt]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bn]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[bmag]: type=<class 'numpy.ndarray'>, shape=(95305,)
[STORE] raw_data[pmag]: type=<class 'numpy.ndarray'>, shape=(95305,)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-04-14T00:00:00.114809984' '2022-04-14T00:00:00.333263360'
 '2022-04-14T00:00:00.551716608' '2022-04-14T00:00:00.770169984'
 '2022-04-14T00:00:00.988623488'] ... total: 95305
[STORE] Dataset variables: ['br', 'bt', 'bn', 'bmag', 'pmag']
[STORE] Dataset coordinates: ['time']
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN_4sa, timestamp=2022-04-14T00:00:00.114809984, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['time', 'pmag', 'zarr.json', 'bt', 'bn', 'br', 'bmag'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for mag_RTN_4sa: Success[0m
[35m[ZARR] 
Processing Data Type: spe_sf0_pad...[0m
[35m[ZARR] [get_data] spe_sf0_pad: needs_import=False, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for spe_sf0_pad[0m
[35m[ZARR] [load_data] Called for data_type=spe_sf0_pad, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=spe_sf0_pad, start_time=2022-04-14 00:00:00+00:00, end_time=2022-04-14 06:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-04-14 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/spe_sf0_pad/2022/04/14.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/spe_sf0_pad/2022/04/14.zarr'][0m
[35m[ZARR] [load_data] Loading 1 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[LOAD] Loaded dataset variables: ['pitch_mesh', 'strahl', 'centroids']
[LOAD] Loaded dataset coordinates: ['pitch_angle', 'time']
[LOAD] Loaded time: ['2022-04-14T00:03:44.139775488' '2022-04-14T00:18:38.925658496'
 '2022-04-14T00:33:33.711861888' '2022-04-14T00:48:28.498364928'
 '2022-04-14T01:03:23.285048320'] ... total: 22
[DEBUG][ZARR][LOAD] Loaded var 'pitch_mesh': type=<class 'numpy.ndarray'>, shape=(22, 12)
[DEBUG][ZARR][LOAD] Loaded var 'strahl': type=<class 'numpy.ndarray'>, shape=(22, 12)
[DEBUG][ZARR][LOAD] Loaded var 'centroids': type=<class 'numpy.ndarray'>, shape=(22,)
[DEBUG][ZARR][LOAD] Loaded coord 'pitch_angle': type=<class 'numpy.ndarray'>, shape: (12,)
[LOAD] LoadedData.raw_data keys: ['pitch_mesh', 'strahl', 'centroids', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[LOAD] LoadedData.datetime_array: ['2022-04-14T00:03:44.139775488' '2022-04-14T00:18:38.925658496'
 '2022-04-14T00:33:33.711861888' '2022-04-14T00:48:28.498364928'
 '2022-04-14T01:03:23.285048320'] ... total: 22
[LOAD] All coordinates after loading:
  - pitch_angle: shape=(12,), first 5 values=[ 7.5 22.5 37.5 52.5 67.5]
  - time: shape=(22,), first 5 values=['2022-04-14T00:03:44.139775488' '2022-04-14T00:18:38.925658496'
 '2022-04-14T00:33:33.711861888' '2022-04-14T00:48:28.498364928'
 '2022-04-14T01:03:23.285048320']
[DEBUG][ZARR][LOAD] times_mesh shape: (22, 12), pitch_mesh shape: (22, 12), dtype: float64
[DEBUG][ZARR][LOAD] First 5 rows of times_mesh: [[   0.            0.            0.            0.            0.
     0.            0.            0.            0.            0.
     0.            0.        ]
 [ 894.78588301  894.78588301  894.78588301  894.78588301  894.78588301
   894.78588301  894.78588301  894.78588301  894.78588301  894.78588301
   894.78588301  894.78588301]
 [1789.5720864  1789.5720864  1789.5720864  1789.5720864  1789.5720864
  1789.5720864  1789.5720864  1789.5720864  1789.5720864  1789.5720864
  1789.5720864  1789.5720864 ]
 [2684.35858944 2684.35858944 2684.35858944 2684.35858944 2684.35858944
  2684.35858944 2684.35858944 2684.35858944 2684.35858944 2684.35858944
  2684.35858944 2684.35858944]
 [3579.14527283 3579.14527283 3579.14527283 3579.14527283 3579.14527283
  3579.14527283 3579.14527283 3579.14527283 3579.14527283 3579.14527283
  3579.14527283 3579.14527283]]
[DEBUG][ZARR][LOAD] First 5 rows of pitch_mesh: [[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['pitch_mesh', 'strahl', 'centroids', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['pitch_angle'] type: <class 'numpy.ndarray'>, shape: (12,)
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (12,), value: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (22, 12)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] i=0, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=1, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=2, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=3, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=4, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] centroids shape: (22,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 22[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(22, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(22,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(22, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-04-14T00:03:44.139000000' '2022-04-14T00:18:38.925000000'
 '2022-04-14T00:33:33.711000000' '2022-04-14T00:48:28.498000000'
 '2022-04-14T01:03:23.285000000'] ... total: 22
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-04-14T00:03:44.139000000, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
[35m[ZARR] Server mode for spe_sf0_pad: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for spe_sf0_pad...[0m
[35m[ZARR] SPDF download result (dynamic mode) for spe_sf0_pad: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for spe_sf0_pad[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (22, 12), value: [[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (22, 12, 32)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(22, 12), value=[[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[DEBUG][EPAD] PITCHANGLE[0]: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] centroids shape: (22,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2022/04/14 00:00:00.000', '2022/04/14 06:00:00.000'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 22[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(22, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(22,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(22, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-04-14T00:03:44.139775488' '2022-04-14T00:18:38.925658496'
 '2022-04-14T00:33:33.711861888' '2022-04-14T00:48:28.498364928'
 '2022-04-14T01:03:23.285048320'] ... total: 22
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-04-14T00:03:44.139775488, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
epad.strahl axis_metadata: {'axes': [{'name': 'time', 'label': 'Time', 'unit': 'datetime', 'values': [1649894624139775488, 1649895518925658496, 1649896413711861888, 1649897308498364928, 1649898203285048320, 1649899098071791232, 1649899992858654336, 1649900887645597440, 1649901782432580736, 1649902677219563776, 1649903572006626816, 1649904466793730048, 1649905361580833152, 1649906256367956352, 1649907151155059584, 1649908045942242816, 1649908940729405952, 1649909835516588928, 1649910730303752192, 1649911625090935296, 1649912519878098560, 1649913414665281536]}, {'name': 'pitch_angle', 'label': 'Pitch Angle', 'unit': 'degrees', 'values': [7.5, 22.5, 37.5, 52.5, 67.5, 82.5, 97.5, 112.5, 127.5, 142.5, 157.5, 172.5]}], 'data_shape': (22, 12)}
✅ plotbot call completed without KeyError.
PASSED

=============================== warnings summary ===============================
tests/test_zarr_basic.py::test_epad_plot_manager_after_get_data
tests/test_zarr_basic.py::test_plotbot_end_to_end_mag_and_epad
tests/test_zarr_basic.py::test_zarr_data_roundtrip_epad_strahl
tests/test_zarr_basic.py::test_zarr_single_file_storage_and_load_epad_strahl
tests/test_zarr_basic.py::test_plotbot_epad_and_mag_rtn_4sa_keyerror_check
  /Users/robertalexander/GitHub/Plotbot/plotbot/data_classes/psp_electron_classes.py:187: RuntimeWarning: invalid value encountered in log10
    log_strahl = np.log10(strahl)

tests/test_zarr_basic.py: 18 warnings
  /opt/anaconda3/envs/plotbot_env/lib/python3.12/site-packages/zarr/api/asynchronous.py:205: UserWarning: Consolidated metadata is currently not part in the Zarr format 3 specification. It may not be supported by other zarr implementations and may change in the future.
    warnings.warn(

tests/test_zarr_basic.py: 10 warnings
  /Users/robertalexander/GitHub/Plotbot/plotbot/zarr_storage.py:273: UserWarning: Discarding nonzero nanoseconds in conversion.
    dt = pd.Timestamp(dt).to_pydatetime()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================ 7 passed, 5 deselected, 33 warnings in 15.99s =================
