initialized server_access
initialized global_tracker
initialized ploptions
initialized data_cubby
initialized plot_manager
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=br[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bt[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bn[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN_4sa, class=mag_rtn_4sa, subclass=pmag[0m
initialized mag_rtn_4sa class
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=br[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bt[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bn[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=pmag[0m
initialized mag_rtn class
[35m[ZARR] Using plot_options: data_type=mag_SC_4sa, class=mag_sc_4sa, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_SC_4sa, class=mag_sc_4sa, subclass=bx[0m
[35m[ZARR] Using plot_options: data_type=mag_SC_4sa, class=mag_sc_4sa, subclass=by[0m
[35m[ZARR] Using plot_options: data_type=mag_SC_4sa, class=mag_sc_4sa, subclass=bz[0m
[35m[ZARR] Using plot_options: data_type=mag_SC_4sa, class=mag_sc_4sa, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_SC_4sa, class=mag_sc_4sa, subclass=pmag[0m
initialized mag_sc_4sa class
[35m[ZARR] Using plot_options: data_type=mag_SC, class=mag_sc, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_SC, class=mag_sc, subclass=bx[0m
[35m[ZARR] Using plot_options: data_type=mag_SC, class=mag_sc, subclass=by[0m
[35m[ZARR] Using plot_options: data_type=mag_SC, class=mag_sc, subclass=bz[0m
[35m[ZARR] Using plot_options: data_type=mag_SC, class=mag_sc, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_SC, class=mag_sc, subclass=pmag[0m
initialized mag_sc class
epad_strahl getattr helper!
'pitch_mesh' is not a recognized attribute, friend!
Try one of these: strahl, centroids
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
initialized epad class
'pitch_mesh' is not a recognized attribute, friend!
Try one of these: strahl, centroids
[35m[ZARR] Using plot_options: data_type=spe_af0_pad, class=epad_hr, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_af0_pad, class=epad_hr, subclass=centroids[0m
initialized epad_hr class
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=t_par[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=t_perp[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=anisotropy[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=v_alfven[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=v_sw[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=m_alfven[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=beta_ppar[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=beta_pperp[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=pressure_ppar[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=pressure_pperp[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=pressure[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=density[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=temperature[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=vr[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=vt[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=vn[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=energy_flux[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=theta_flux[0m
[35m[ZARR] Using plot_options: data_type=spi_sf00_l3_mom, class=proton, subclass=phi_flux[0m
initialized proton class
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=t_par[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=t_perp[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=anisotropy[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=v_alfven[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=v_sw[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=m_alfven[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=beta_ppar[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=beta_pperp[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=pressure_ppar[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=pressure_pperp[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=pressure[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=density[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=temperature[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=vr[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=vt[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=vn[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=energy_flux[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=theta_flux[0m
[35m[ZARR] Using plot_options: data_type=spi_af00_L3_mom, class=proton_hr, subclass=phi_flux[0m
initialized proton_hr class
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=qz_p[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vsw_mach_pfits[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=beta_ppar_pfits[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=beta_pperp_pfits[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=ham_param[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=np1[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=np2[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=n_tot[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=np2_np1_ratio[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vp1_x[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vp1_y[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vp1_z[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vp1_mag[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vcm_x[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vcm_y[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vcm_z[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vcm_mag[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vdrift[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vdrift_abs[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=vdrift_va_pfits[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Trat1[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Trat2[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Trat_tot[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Tpar1[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Tpar2[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Tpar_tot[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Tperp1[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Tperp2[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Tperp_tot[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=Temp_tot[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=abs_qz_p[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=chi_p[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=chi_p_norm[0m
[35m[ZARR] Using plot_options: data_type=proton_fits, class=proton_fits, subclass=valfven_pfits[0m
initialized proton_fits class
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamstring[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamogram_30s[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamogram_og_30s[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamogram_2m[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamogram_og_2m[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamogram_20m[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamogram_90m[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamogram_4h[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=hamogram_og_4h[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=trat_ham[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=trat_ham_og[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=ham_core_drift[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=ham_core_drift_va[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=Nham_div_Ncore[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=Nham_div_Ncore_og[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=Nham_div_Ntot[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=Nham_div_Ntot_og[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=Tperp_ham_div_core[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=Tperp_ham_div_core_og[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=Tperprat_driftva_hc[0m
[35m[ZARR] Using plot_options: data_type=ham, class=ham, subclass=Tperprat_driftva_hc_og[0m
initialized ham_class
🔉 initialized audifier

Importing libraries, this may take a moment. Hold tight... 

✅ Imported standard libraries and utilities.
✅ Imported numpy, pandas, and scipy libraries.
✅ Imported matplotlib libraries.
✅ Imported cdflib, BeautifulSoup, requests, dateutil, and datetime libraries.
[35m[ZARR] [ZarrStorage.__init__] Initializing with base_dir=./data_cubby[0m
[35m[ZARR] [ZarrStorage.__init__] Directory created: ./data_cubby[0m

🤖 Plotbot Initialized
✨ Showdahodo initialized
Positional Data Helper Initialized
📈📉 Multiplot Initialized
[94m   Version: 2025_05_03_v1.97[0m
[94m   Commit: start ZARR_integration branch: v1.97: begin metadata-driven Zarr refactor [2025_05_03_v1.97][0m

[94m🤖 Plotbot Initialized[0m
Test-only mode enabled
============================= test session starts ==============================
platform darwin -- Python 3.12.4, pytest-7.4.4, pluggy-1.5.0 -- /opt/anaconda3/envs/plotbot_env/bin/python3.12
cachedir: .pytest_cache
rootdir: /Users/robertalexander/GitHub/Plotbot
configfile: pytest.ini
collecting ... collected 12 items / 10 deselected / 2 selected

tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load Deleted Zarr file: data_cubby/spe_sf0_pad/2022/02/25.zarr
[35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2022/02/25 00:00:00.000', '2022/02/26 23:59:59.999'], variables=(plot_manager(None, dtype=object),)[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'spe_sf0_pad'}[0m
[35m[ZARR] 
Processing Data Type: spe_sf0_pad...[0m
[35m[ZARR] [get_data] spe_sf0_pad: needs_import=True, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for spe_sf0_pad[0m
[35m[ZARR] [load_data] Called for data_type=spe_sf0_pad, trange=['2022/02/25 00:00:00.000', '2022/02/26 23:59:59.999'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=spe_sf0_pad, start_time=2022-02-25 00:00:00+00:00, end_time=2022-02-26 23:59:59.999000+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-02-25 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-02-26 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/spe_sf0_pad/2022/02/25.zarr', './data_cubby/spe_sf0_pad/2022/02/26.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/spe_sf0_pad/2022/02/25.zarr', './data_cubby/spe_sf0_pad/2022/02/26.zarr'][0m
[35m[ZARR] [load_data] Loading 2 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[35m[ZARR] Zarr data not available for spe_sf0_pad, proceeding with normal download...[0m
[35m[ZARR] Server mode for spe_sf0_pad: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for spe_sf0_pad...[0m
[35m[ZARR] SPDF download result (dynamic mode) for spe_sf0_pad: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for spe_sf0_pad[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] Updating tracker for spe_sf0_pad[0m
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (17502, 12), value: [[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (17502, 12, 32)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(17502, 12), value=[[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] PITCHANGLE[0]: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] centroids shape: (17502,)
'pitch_mesh' is not a recognized attribute, friend!
Try one of these: strahl, centroids
epad_strahl getattr helper!
'pitch_mesh' is not a recognized attribute, friend!
Try one of these: strahl, centroids, pitch_angle, pitch_mesh
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2022/02/25 00:00:00.000', '2022/02/26 23:59:59.999'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 17502[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(17502, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(17502,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(17502, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-02-25T00:00:04.602744064' '2022-02-25T00:00:18.583766912'
 '2022-02-25T00:00:32.564849408' '2022-02-25T00:00:46.545931776'
 '2022-02-25T00:01:00.527014528'] ... total: 17502
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-02-25T00:00:04.602744064, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
CDF import and calculation duration: 1.872578 seconds
[35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2022/02/25 00:00:00.000', '2022/02/26 23:59:59.999'], variables=(plot_manager([[6.842158 , 6.6652737, 7.277492 , ..., 8.58398  ,
               9.208533 , 9.637167 ],
              [6.960958 , 6.602651 , 6.897991 , ..., 8.510503 ,
               9.040617 , 9.421002 ],
              [7.1948447, 6.5812373, 6.956063 , ..., 8.545405 ,
               9.082574 , 9.686385 ],
              ...,
              [9.5739355, 9.338243 , 8.318874 , ..., 7.1855607,
               7.353836 , 6.9581027],
              [9.552918 , 9.369397 , 8.392709 , ..., 7.0241437,
               7.277694 , 7.3560424],
              [9.618401 , 9.324852 , 8.454291 , ..., 7.2683825,
               7.2237844, 7.2591324]], dtype=float32),)[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'spe_sf0_pad'}[0m
[35m[ZARR] 
Processing Data Type: spe_sf0_pad...[0m
[35m[ZARR] [get_data] spe_sf0_pad: needs_import=False, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for spe_sf0_pad[0m
[35m[ZARR] [load_data] Called for data_type=spe_sf0_pad, trange=['2022/02/25 00:00:00.000', '2022/02/26 23:59:59.999'][0m
[35m[ZARR] [load_data] file_time_format=daily[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=spe_sf0_pad, start_time=2022-02-25 00:00:00+00:00, end_time=2022-02-26 23:59:59.999000+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-02-25 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-02-26 00:00:00+00:00, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/spe_sf0_pad/2022/02/25.zarr', './data_cubby/spe_sf0_pad/2022/02/26.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/spe_sf0_pad/2022/02/25.zarr', './data_cubby/spe_sf0_pad/2022/02/26.zarr'][0m
[35m[ZARR] [load_data] Loading 2 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[LOAD] Loaded dataset variables: ['strahl', 'pitch_mesh', 'centroids']
[LOAD] Loaded dataset coordinates: ['pitch_angle', 'time']
[LOAD] Loaded time: ['2022-02-25T00:00:04.602744064' '2022-02-25T00:00:18.583766912'
 '2022-02-25T00:00:32.564849408' '2022-02-25T00:00:46.545931776'
 '2022-02-25T00:01:00.527014528'] ... total: 17502
[DEBUG][ZARR][LOAD] Loaded var 'strahl': type=<class 'numpy.ndarray'>, shape=(17502, 12)
[DEBUG][ZARR][LOAD] Loaded var 'pitch_mesh': type=<class 'numpy.ndarray'>, shape=(17502, 12)
[DEBUG][ZARR][LOAD] Loaded var 'centroids': type=<class 'numpy.ndarray'>, shape=(17502,)
[DEBUG][ZARR][LOAD] Loaded coord 'pitch_angle': type=<class 'numpy.ndarray'>, shape: (12,)
[LOAD] LoadedData.raw_data keys: ['strahl', 'pitch_mesh', 'centroids', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[LOAD] LoadedData.datetime_array: ['2022-02-25T00:00:04.602744064' '2022-02-25T00:00:18.583766912'
 '2022-02-25T00:00:32.564849408' '2022-02-25T00:00:46.545931776'
 '2022-02-25T00:01:00.527014528'] ... total: 17502
[LOAD] All coordinates after loading:
  - pitch_angle: shape=(12,), first 5 values=[ 7.5 22.5 37.5 52.5 67.5]
  - time: shape=(17502,), first 5 values=['2022-02-25T00:00:04.602744064' '2022-02-25T00:00:18.583766912'
 '2022-02-25T00:00:32.564849408' '2022-02-25T00:00:46.545931776'
 '2022-02-25T00:01:00.527014528']
[DEBUG][ZARR][LOAD] times_mesh shape: (17502, 12), pitch_mesh shape: (17502, 12), dtype: float64
[DEBUG][ZARR][LOAD] First 5 rows of times_mesh: [[ 0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.        ]
 [13.98102285 13.98102285 13.98102285 13.98102285 13.98102285 13.98102285
  13.98102285 13.98102285 13.98102285 13.98102285 13.98102285 13.98102285]
 [27.96210534 27.96210534 27.96210534 27.96210534 27.96210534 27.96210534
  27.96210534 27.96210534 27.96210534 27.96210534 27.96210534 27.96210534]
 [41.94318771 41.94318771 41.94318771 41.94318771 41.94318771 41.94318771
  41.94318771 41.94318771 41.94318771 41.94318771 41.94318771 41.94318771]
 [55.92427046 55.92427046 55.92427046 55.92427046 55.92427046 55.92427046
  55.92427046 55.92427046 55.92427046 55.92427046 55.92427046 55.92427046]]
[DEBUG][ZARR][LOAD] First 5 rows of pitch_mesh: [[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
 [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]]
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
epad_strahl getattr helper!
'pitch_mesh' is not a recognized attribute, friend!
Try one of these: strahl, centroids, pitch_angle, pitch_mesh
epad_strahl getattr helper!
'pitch_mesh' is not a recognized attribute, friend!
Try one of these: strahl, centroids, pitch_angle, pitch_mesh
[DEBUG][EPAD] imported_data.data keys: ['strahl', 'pitch_mesh', 'centroids', 'pitch_angle', 'EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['pitch_angle'] type: <class 'numpy.ndarray'>, shape: (12,)
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (12,), value: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (17502, 12)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] i=0, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=1, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=2, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=3, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] i=4, pitch_angle shape: (12,), strahl[i, :].shape: (12,)
[DEBUG][EPAD] centroids shape: (17502,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2022/02/25 00:00:00.000', '2022/02/26 23:59:59.999'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 17502[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(17502, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(17502,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(17502, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-02-25T00:00:04.602000000' '2022-02-25T00:00:18.583000000'
 '2022-02-25T00:00:32.564000000' '2022-02-25T00:00:46.545000000'
 '2022-02-25T00:01:00.527000000'] ... total: 17502
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-02-25T00:00:04.602000000, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
[35m[ZARR] Server mode for spe_sf0_pad: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for spe_sf0_pad...[0m
[35m[ZARR] SPDF download result (dynamic mode) for spe_sf0_pad: Success[0m
[35m[ZARR] [get_data] Calling import_data_function for spe_sf0_pad[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] [get_data] Calling update on epad with data_obj for spe_sf0_pad[0m
[DEBUG][EPAD] imported_data.data keys: ['EFLUX_VS_PA_E', 'PITCHANGLE']
[DEBUG][EPAD] imported_data.data['PITCHANGLE'] type: <class 'numpy.ndarray'>, shape: (17502, 12), value: [[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] eflux type: <class 'numpy.ndarray'>, shape: (17502, 12, 32)
[DEBUG][EPAD] About to assign self.pitch_angle. pa: type=<class 'numpy.ndarray'>, shape=(17502, 12), value=[[  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 ...
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]
 [  7.5  22.5  37.5 ... 142.5 157.5 172.5]]
[DEBUG][EPAD] PITCHANGLE[0]: [  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] self.pitch_angle before raw_data: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[DEBUG][EPAD] centroids shape: (17502,)
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=strahl[0m
[35m[ZARR] Using plot_options: data_type=spe_sf0_pad, class=epad, subclass=centroids[0m
[35m[ZARR] [get_data] Update completed for epad[0m
[35m[ZARR] [get_data] Calling store_data for spe_sf0_pad[0m
[35m[ZARR] [store_data] Called for data_type=spe_sf0_pad, trange=['2022/02/25 00:00:00.000', '2022/02/26 23:59:59.999'][0m
[35m[ZARR] Storing data for spe_sf0_pad[0m
[35m[ZARR] datetime_array length: 17502[0m
[35m[ZARR] raw_data keys: ['strahl', 'centroids', 'pitch_angle', 'pitch_mesh'][0m
[STORE] class_instance.pitch_angle: type=<class 'numpy.ndarray'>, shape=(12,), value=[  7.5  22.5  37.5  52.5  67.5  82.5  97.5 112.5 127.5 142.5 157.5 172.5]
[STORE] raw_data[strahl]: type=<class 'numpy.ndarray'>, shape=(17502, 12)
[STORE] raw_data[centroids]: type=<class 'numpy.ndarray'>, shape=(17502,)
[STORE] raw_data[pitch_angle]: type=<class 'numpy.ndarray'>, shape=(12,)
[STORE] raw_data[pitch_mesh]: type=<class 'numpy.ndarray'>, shape=(17502, 12)
[35m[ZARR] [store_data] file_time_format=daily[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2022-02-25T00:00:04.602744064' '2022-02-25T00:00:18.583766912'
 '2022-02-25T00:00:32.564849408' '2022-02-25T00:00:46.545931776'
 '2022-02-25T00:01:00.527014528'] ... total: 17502
[STORE] Dataset variables: ['strahl', 'centroids', 'pitch_mesh']
[STORE] Dataset coordinates: ['time', 'pitch_angle']
[35m[ZARR] [_get_zarr_path] Called for data_type=spe_sf0_pad, timestamp=2022-02-25T00:00:04.602744064, file_time_format=daily[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['pitch_angle', 'pitch_mesh', 'strahl', 'time', 'zarr.json', 'centroids'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for spe_sf0_pad: Success[0m
Zarr import duration: 1.935655 seconds
Zarr is 0.97x faster than CDF import.
epad.strahl type: <class 'plotbot.plot_manager.plot_manager'>
epad.strahl shape: (17502, 12)
epad.strahl data shape: (17502, 12)
epad.strahl data preview: [[6.842158  6.6652737 7.277492  7.1250744 7.0600486]
 [6.960958  6.602651  6.897991  6.952699  7.0141397]
 [7.1948447 6.5812373 6.956063  7.0854897 7.259926 ]
 [6.8636727 6.630008  7.069099  7.0803204 7.1493645]
 [6.9886117 6.8530684 6.5441904 7.071647  7.1959796]]
PASSED
tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load_mag_rtn [35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2020/04/09 09:00:00.000', '2020/04/09 15:00:00.000'], variables=(plot_manager(None, dtype=object),)[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'mag_RTN'}[0m
[35m[ZARR] 
Processing Data Type: mag_RTN...[0m
[35m[ZARR] [get_data] mag_RTN: needs_import=True, needs_refresh=True[0m
[35m[ZARR] [get_data] Import/Refresh logic triggered for mag_RTN[0m
[35m[ZARR] [load_data] Called for data_type=mag_RTN, trange=['2020/04/09 09:00:00.000', '2020/04/09 15:00:00.000'][0m
[35m[ZARR] [load_data] file_time_format=6-hour[0m
[35m[ZARR] [_find_zarr_paths] Called for data_type=mag_RTN, start_time=2020-04-09 09:00:00+00:00, end_time=2020-04-09 15:00:00+00:00, file_time_format=6-hour[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN, timestamp=2020-04-09 06:00:00+00:00, file_time_format=6-hour[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN, timestamp=2020-04-09 12:00:00+00:00, file_time_format=6-hour[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] [_find_zarr_paths] Returning paths: ['./data_cubby/mag_rtn/2020/04/09_06.zarr', './data_cubby/mag_rtn/2020/04/09_12.zarr'][0m
[35m[ZARR] [load_data] zarr_paths: ['./data_cubby/mag_rtn/2020/04/09_06.zarr', './data_cubby/mag_rtn/2020/04/09_12.zarr'][0m
[35m[ZARR] [load_data] Loading 2 Zarr stores[0m
[35m[ZARR] [load_data] Looping through zarr_paths[0m
[LOAD] Loaded dataset variables: ['pmag', 'bt', 'bmag', 'br', 'bn']
[LOAD] Loaded dataset coordinates: ['time']
[LOAD] Loaded time: ['2020-04-09T09:00:00.006248448' '2020-04-09T09:00:00.115475072'
 '2020-04-09T09:00:00.224701824' '2020-04-09T09:00:00.333928320'
 '2020-04-09T09:00:00.443154944'] ... total: 197753
[LOAD] LoadedData.raw_data keys: ['pmag', 'bt', 'bmag', 'br', 'bn', 'psp_fld_l2_mag_RTN']
[LOAD] LoadedData.datetime_array: ['2020-04-09T09:00:00.006248448' '2020-04-09T09:00:00.115475072'
 '2020-04-09T09:00:00.224701824' '2020-04-09T09:00:00.333928320'
 '2020-04-09T09:00:00.443154944'] ... total: 197753
[LOAD] All coordinates after loading:
  - time: shape=(197753,), first 5 values=['2020-04-09T09:00:00.006248448' '2020-04-09T09:00:00.115475072'
 '2020-04-09T09:00:00.224701824' '2020-04-09T09:00:00.333928320'
 '2020-04-09T09:00:00.443154944']
[35m[ZARR] [get_data] Calling update on mag_rtn with data_obj for mag_RTN[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=br[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bt[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bn[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=pmag[0m
[35m[ZARR] [get_data] Update completed for mag_rtn[0m
[35m[ZARR] [get_data] Calling store_data for mag_RTN[0m
[35m[ZARR] [store_data] Called for data_type=mag_RTN, trange=['2020/04/09 09:00:00.000', '2020/04/09 15:00:00.000'][0m
[35m[ZARR] Storing data for mag_RTN[0m
[35m[ZARR] datetime_array length: 197753[0m
[35m[ZARR] raw_data keys: ['all', 'br', 'bt', 'bn', 'bmag', 'pmag'][0m
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
[STORE] class_instance.pitch_angle: type=<class 'NoneType'>, shape=None, value=None
[STORE] raw_data[all]: type=<class 'list'>, shape=None
[STORE] raw_data[br]: type=<class 'numpy.ndarray'>, shape=(197753,)
[STORE] raw_data[bt]: type=<class 'numpy.ndarray'>, shape=(197753,)
[STORE] raw_data[bn]: type=<class 'numpy.ndarray'>, shape=(197753,)
[STORE] raw_data[bmag]: type=<class 'numpy.ndarray'>, shape=(197753,)
[STORE] raw_data[pmag]: type=<class 'numpy.ndarray'>, shape=(197753,)
[35m[ZARR] [store_data] file_time_format=6-hour[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2020-04-09T09:00:00.006000000' '2020-04-09T09:00:00.115000000'
 '2020-04-09T09:00:00.224000000' '2020-04-09T09:00:00.333000000'
 '2020-04-09T09:00:00.443000000'] ... total: 197753
[STORE] Dataset variables: ['br', 'bt', 'bn', 'bmag', 'pmag']
[STORE] Dataset coordinates: ['time']
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN, timestamp=2020-04-09T09:00:00.006000000, file_time_format=6-hour[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['time', 'pmag', 'zarr.json', 'bt', 'bn', 'br', 'bmag'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for mag_RTN: Success[0m
[35m[ZARR] Server mode for mag_RTN: dynamic[0m
[35m[ZARR] Attempting SPDF download (dynamic mode) for mag_RTN...[0m
[35m[ZARR] SPDF download result (dynamic mode) for mag_RTN: Failed[0m
[35m[ZARR] SPDF download failed/incomplete for mag_RTN, falling back to Berkeley...[0m
[35m[ZARR] Berkeley fallback download result for mag_RTN: Failed[0m
[35m[ZARR] [get_data] Calling import_data_function for mag_RTN[0m
[35m[ZARR] [get_data] import_data_function returned: Success[0m
[35m[ZARR] Updating tracker for mag_RTN[0m
[35m[ZARR] [get_data] Calling update on mag_rtn with data_obj for mag_RTN[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=all[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=br[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bt[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bn[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=bmag[0m
[35m[ZARR] Using plot_options: data_type=mag_RTN, class=mag_rtn, subclass=pmag[0m
[35m[ZARR] [get_data] Update completed for mag_rtn[0m
[35m[ZARR] [get_data] Calling store_data for mag_RTN[0m
[35m[ZARR] [store_data] Called for data_type=mag_RTN, trange=['2020/04/09 09:00:00.000', '2020/04/09 15:00:00.000'][0m
[35m[ZARR] Storing data for mag_RTN[0m
[35m[ZARR] datetime_array length: 197753[0m
[35m[ZARR] raw_data keys: ['all', 'br', 'bt', 'bn', 'bmag', 'pmag'][0m
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
'pitch_angle' is not a recognized attribute, friend!
Try one of these: all, br, bt, bn, bmag, pmag
[STORE] class_instance.pitch_angle: type=<class 'NoneType'>, shape=None, value=None
[STORE] raw_data[all]: type=<class 'list'>, shape=None
[STORE] raw_data[br]: type=<class 'numpy.ndarray'>, shape=(197753,)
[STORE] raw_data[bt]: type=<class 'numpy.ndarray'>, shape=(197753,)
[STORE] raw_data[bn]: type=<class 'numpy.ndarray'>, shape=(197753,)
[STORE] raw_data[bmag]: type=<class 'numpy.ndarray'>, shape=(197753,)
[STORE] raw_data[pmag]: type=<class 'numpy.ndarray'>, shape=(197753,)
[35m[ZARR] [store_data] file_time_format=6-hour[0m
[35m[ZARR] [store_data] Creating data_vars from class_instance.raw_data[0m
[STORE] datetime_array: ['2020-04-09T09:00:00.006248448' '2020-04-09T09:00:00.115475072'
 '2020-04-09T09:00:00.224701824' '2020-04-09T09:00:00.333928320'
 '2020-04-09T09:00:00.443154944'] ... total: 197753
[STORE] Dataset variables: ['br', 'bt', 'bn', 'bmag', 'pmag']
[STORE] Dataset coordinates: ['time']
[35m[ZARR] [_get_zarr_path] Called for data_type=mag_RTN, timestamp=2020-04-09T09:00:00.006248448, file_time_format=6-hour[0m
[35m[ZARR] [_get_zarr_path] Returning path[0m
[35m[ZARR] Checking if Zarr file exists: True[0m
[35m[ZARR] Zarr directory contents: ['time', 'pmag', 'zarr.json', 'bt', 'bn', 'br', 'bmag'][0m
[35m[ZARR] [store_data] Data saved to Zarr store[0m
[35m[ZARR] [get_data] store_data result for mag_RTN: Success[0m
CDF import and calculation duration: 1.069946 seconds
[35m[ZARR] TRACE: get_data function entry point[0m
[35m[ZARR] INPUT: trange=['2020/04/09 09:00:00.000', '2020/04/09 15:00:00.000'], variables=(plot_manager([-0.6825728 , -0.85146236, -0.9035517 , ..., -2.8909395 ,
              -2.8206577 , -2.7861578 ], dtype=float32),)[0m
Variable type: <class 'plotbot.plot_manager.plot_manager'>, name: None
[35m[ZARR] [get_data] required_data_types: {'mag_RTN'}[0m
[35m[ZARR] 
Processing Data Type: mag_RTN...[0m
[35m[ZARR] [get_data] mag_RTN: needs_import=False, needs_refresh=False[0m
Zarr import duration: 0.000429 seconds
Zarr is 2494.54x faster than CDF import.
mag_rtn.br type: <class 'plotbot.plot_manager.plot_manager'>
mag_rtn.br shape: (197753,)
mag_rtn.br data shape: (197753,)
mag_rtn.br data preview: [-0.6825728  -0.85146236 -0.9035517  -0.7371375  -0.7500823 ]
PASSED

=============================== warnings summary ===============================
tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load
tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load
tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load_mag_rtn
  /Users/robertalexander/GitHub/Plotbot/plotbot/zarr_storage.py:273: UserWarning: Discarding nonzero nanoseconds in conversion.
    dt = pd.Timestamp(dt).to_pydatetime()

tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load
tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load
tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load
tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load_mag_rtn
tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load_mag_rtn
  /opt/anaconda3/envs/plotbot_env/lib/python3.12/site-packages/zarr/api/asynchronous.py:205: UserWarning: Consolidated metadata is currently not part in the Zarr format 3 specification. It may not be supported by other zarr implementations and may change in the future.
    warnings.warn(

tests/test_zarr_basic.py::test_profile_zarr_vs_cdf_load
  /Users/robertalexander/GitHub/Plotbot/plotbot/data_classes/psp_electron_classes.py:187: RuntimeWarning: invalid value encountered in log10
    log_strahl = np.log10(strahl)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================= 2 passed, 10 deselected, 9 warnings in 4.89s =================
